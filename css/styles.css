/* Normalisation supplémentaire */
* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

/* Styles généraux */
html {
    scroll-behavior: smooth;
}

body {
    font-family: 'Asap', sans-serif;
    text-align: center;
}

header,
nav,
section,
footer {
    min-width: 100%;
}

nav,
header,
footer {
    height: 12vh;
    padding: 2vh 0;
}

header {
    color: #0099cc;
    /* Conteneur flexible en rangée */
    display: flex;
    align-items: center;
    flex-direction: row;
}

img {
    height: 100%;
    margin: 1%;
    cursor: pointer;
}

h1 {
    font-size: 3rem;
    margin-left: 1%;
    text-shadow: 3px 1px 1px rgb(22, 86, 170);
}

nav,
footer {
    color: #ffffff;
    background-color: #0099cc;
}

nav {
    /* 
        [Étape 1a : Positionnement]
        Ajoutez les propriétés de styles adéquates pour que la barre de 
        navigation reste visibles en haut de la page lorsque l'utilisateur défile
        dans la fenêtre de navigation.
    */
        display: flex;
        position: sticky;
        top: 0;
        

    /*
        [Étape 1b : Flexbox]
        Ajoutez les propriétés de styles adéquates pour que les items du menu 
        de navigation soient affichés en rangée, et distribués également sur la 
        largeur de la page.
    */
        flex-direction: row;
        justify-content: space-around;
        align-items: center;

}

a {
    display: block;
    justify-content: center;
    color: #fff;
    text-decoration: none;
    font-size: 2rem;
    font-weight: bold;
    text-align: center;
}

nav a {
    height: 12vh;
    line-height: 12vh;
    border-bottom: 6px solid transparent;
    /*
        [Étape 1c : Flexbox]
        Ajoutez la propriété de style adéquate pour que les liens de navigation
        s'étire (ou rétrécisse) pour remplir l'espace disponible de façon égale
        lorsque le conteneur est étiré ou rétréci (en modifiant la largeur de la 
        fenêtre par exemple).
    */
        font-size: 1rem;
        font-size: clamp(1rem, 0.5544840887174542rem + 1.5429122468659595vw, 2rem);

    /*  
        [Étape 2 : Animation de transition]
        Ajoutez la propriété de style adéquate pour appliquer une animation 
        de transition sur les liens de navigations : la couleur de fond et la 
        bordure du bas doivent être animés (choisissez la durée).  
    */
        transition: 0.5s;
}

/* 
    [Étape 1d : Styles de survol de l'élément]
    Ajoutez une règle de style pour modifier la couleur de fond et la bordure du
    bas des liens de navigation (les éléments sélectionnés ci-dessus dans la
    règle précédente) lorsque l'utilisateur survol ces éléments de la page avec 
    le curseur de la souris.
*/

nav a:hover{
    background-color: #2eb0dc;
    border-bottom: 6px solid #0099cc;
}



section {
    /* Hauteur de la fenêtre ou viewport MOINS celle du menu de navigation */
    height: 90vh;

    /*
        [Étape 3 : Flexbox]
        Ajoutez les propriétés de styles adéquates pour que chaque section soit
        affichée centrée horizontalement et verticalement.
    */
        display: flex;
        align-items: center;
        justify-content: center;
}

.fleche-haut {
        height: 8vmin;
        width: 8vmin;
        border-radius: 50%;
        color: #fff;
        background-color: #0099cc;

    /*  
        [Étape 4a : Positionnement]
        Ajoutez la propriété de style adéquate pour que le bouton "haut de page"
        (contenant la flèche verticale) soit toujours visible en bas à droite de 
        la page (même lorsqu'on fait défiler la page dans la fenêtre du navigateur).
    */
        position: fixed;
        top: 550px;
        right: 50px;

    /*  
        [Étape 4b : Ombre portée]
        Ajoutez la propriété de style adéquate pour appliquer un léger effet 
        d'ombre portée sur le bouton.
    */
        box-shadow: 0px 5px 15px grey;    

    /*  
        [Étape 4c : Flexbox (ou autre technique pour centrer)]
        Ajoutez les propriétés de style adéquates pour que la flèche verticale
        soit centrée horizontalement et *verticalement* dans le disque bleu du 
        "bouton".
    */
        display: flex;
        align-items: center;
}

/* 
    [Étape 4d : Styles de survol de l'élément et transformation]
    Ajoutez une règle de style pour que le bouton "haut de page" soit agrandit 
    de 10% (mise à l'échelle +10%) lorsqu'on le survol.
*/

    .fleche-haut:hover{
        transform: scale(110%);
    }
    

.fleche-haut a {
    width: 100%;
}

/* Caractéristiques générales des dés et des points */

.face-de {
    width: 50vmin;
    height: 50vmin;
    padding: 5vmin;
    border-radius: 10vmin;
    background-color: #e7e7e7;
    box-shadow: inset 0 5px white, inset 0 -5px #bbb, inset 5px 0 #d7d7d7, inset -5px 0 #d7d7d7;

    /*
        [Étape 5a : Flexbox]
        Ajoutez les propriétés de styles adéquates pour qu'une face de dé soit 
        un conteneur flexible contenant des points distancés également.
    */
    display: flex;
    justify-content: space-between;


    /*  
        [Étape 6 : Animation de transition]
        Ajoutez la propriété de style adéquate pour appliquer une animation 
        de transition sur les face de dé : la mise à l'échelle et la rotation 
        qui sont modifiés lorsqu'on survol l'élément doivent être animés.  
    */
    transition: 0.5s;
}

/* 
    [Étape 5b : Styles de survol de l'élément et transformation]
    Ajoutez une règle de style pour appliquer les deux transformations suivantes 
    aux faces de dé lorsqu'on les survol : 
        1) Mise à l'échelle de +20%
        2) Rotation d'un demi-tour
*/

.face-de:hover{
    transform: scale(120%);
    transform: rotate(180deg);
}


.point {
    width: 7vmin;
    height: 7vmin;
    border-radius: 50%;
    margin: 2vmin;
    background-color: #000;
    box-shadow: inset 0 3px #111, inset 0 -3px #555;
}

.colonne-points {
    /*
        [Étape 7 : Flexbox]
        Ajoutez les propriétés de styles adéquates pour que les points du dé
        qui sont groupés dans une "colonne" soit affichés de façon flexible et 
        distancés également mais *en colonne*.
    */
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}


/* Caractéristiques spécifiques à chaque dé */

/* Face 1 */
/* 
    [Étape 8a : Flexbox]
    Le seul point contenu dans ce dé doit être centré horizontalement et 
    verticalement.
*/

.face1{
    justify-content: center;
    align-items: center;
}

/* Face 2 */
/* 
    [Étape 8b : Flexbox et pseudo-classe]
    Le deuxième point est auto-aligné au bas du dé.
*/

.face2 .point:nth-child(1){
    justify-content: flex-start;
    align-items: flex-start;
}

.face2 .point:nth-child(2){
    align-self: flex-end;
}

/* Face 3 */
/* 
    [Étape 8c : Flexbox et pseudo-classe]
    Le deuxième point est au centre et le troisième au bas du dé (vous avez 
    besoin de cibler chaque point séparément, et donc deux règles de styles 
    sont requises ici).
*/
.face3 .point:nth-child(2){
    align-self: center;
}

.face3 .point:nth-child(3){
    align-self: flex-end;
}


/* Face 4 : rien à faire (les points sur ce dé sont alignés correctement) */

/* Face 5 */
/* 
    [Étape 8d : Flexbox et pseudo-classe]
    Le point de la colonne du milieu est au milieu de cette colonne.
*/
.face5 .colonne-points:nth-child(2){
    justify-content: center;
}

/* Face 6 : rien à faire (les points sur ce dé sont alignés correctement) */